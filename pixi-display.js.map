{"version":3,"file":"pixi-display.js","sourceRoot":"","sources":["../src/Const.ts","../src/ContainerMixin.ts","../src/DisplayGroup.ts","../src/DisplayList.ts","../src/DisplayObjectMixin.ts","../src/InteractionManagerMixin.ts","../src/renderers.ts","../src/xporter.ts"],"names":[],"mappings":"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","sourcesContent":["declare module PIXI {\r\n    export var DISPLAY_FLAG: {\r\n        /**\r\n         * pass through, recursively go into children\r\n         */\r\n        AUTO_CHILDREN: number,\r\n        /**\r\n         * container will handle it itself\r\n         */\r\n        AUTO_CONTAINER: number,\r\n        /**\r\n         * like DisplayObject, no children\r\n         */\r\n        AUTO_OBJECT: number,\r\n        /**\r\n         * Container will always handle rendering itself, no need to go inside\r\n         */\r\n        MANUAL_CONTAINER: number\r\n    }\r\n}\r\n\r\n(PIXI as any).DISPLAY_FLAG = {\r\n    AUTO_CHILDREN: 0,\r\n    AUTO_CONTAINER: 1,\r\n    AUTO_OBJECT: 2,\r\n    MANUAL_CONTAINER: 3\r\n};\r\n","import WebGLRenderer = PIXI.WebGLRenderer;\r\nimport CanvasRenderer = PIXI.CanvasRenderer;\r\ndeclare module PIXI {\r\n    export interface Container {\r\n        displayList: pixi_display.DisplayList;\r\n        displayChildren: Array<PIXI.DisplayObject>;\r\n        updateTransform(): void;\r\n        renderCanvas(renderer: CanvasRenderer): void;\r\n        renderWebGL(renderer: WebGLRenderer): void;\r\n        containerRenderWebGL(renderer: WebGLRenderer): void;\r\n        containerRenderCanvas(renderer: CanvasRenderer): void;\r\n    }\r\n}\r\n\r\n(Object as any).assign(PIXI.Container.prototype, {\r\n    displayList: null,\r\n    displayChildren: null,\r\n    displayParent: null,\r\n    updateTransform: function () {\r\n        if (!this.visible) {\r\n            return;\r\n        }\r\n        this.containerUpdateTransform();\r\n        if (this.displayList) {\r\n            this.displayList.update(this);\r\n        }\r\n    },\r\n    renderCanvas: function (renderer: CanvasRenderer) {\r\n        if (!this.visible) {\r\n            this.displayOrder = 0;\r\n            return;\r\n        }\r\n\r\n        this.displayOrder = renderer.incDisplayOrder();\r\n\r\n        // if the object is not visible or the alpha is 0 then no need to render this element\r\n        if (this.worldAlpha <= 0 || !this.renderable) {\r\n            return;\r\n        }\r\n\r\n        //hook for displayList\r\n\r\n        if (this.displayList) {\r\n            this.displayList.renderCanvas(this, renderer);\r\n            return;\r\n        }\r\n\r\n        this.containerRenderCanvas(renderer);\r\n    },\r\n    renderWebGL: function (renderer: WebGLRenderer) {\r\n        if (!this.visible) {\r\n            this.displayOrder = 0;\r\n            return;\r\n        }\r\n\r\n        this.displayOrder = renderer.incDisplayOrder();\r\n\r\n        // if the object is not visible or the alpha is 0 then no need to render this element\r\n        if (this.worldAlpha <= 0 || !this.renderable) {\r\n            return;\r\n        }\r\n\r\n        //hook for displayList\r\n\r\n        if (this.displayList) {\r\n            this.displayList.renderWebGL(this, renderer);\r\n            return;\r\n        }\r\n\r\n        this.containerRenderWebGL(renderer);\r\n    },\r\n    containerRenderWebGL: PIXI.Container.prototype.renderWebGL,\r\n    containerRenderCanvas: PIXI.Container.prototype.renderCanvas\r\n});\r\n","/**\r\n * A shared component for multiple DisplayObject's allows to specify rendering order for them\r\n *\r\n * @class\r\n * @extends EventEmitter\r\n * @memberof PIXI\r\n * @param zIndex {number} z-index for display group\r\n * @param sorting {boolean | Function} if you need to sort elements inside, please provide function that will set displayObject.zOrder accordingly\r\n */\r\n\r\nmodule pixi_display {\r\n    import DisplayObject = PIXI.DisplayObject;\r\n    import Container = PIXI.Container;\r\n    import utils = PIXI.utils;\r\n\r\n    export class DisplayGroup extends utils.EventEmitter {\r\n        computedChildren: Array<DisplayObject>;\r\n\r\n        currentDisplayList: DisplayList;\r\n\r\n        currentIndex = 0;\r\n\r\n        zIndex = 0;\r\n\r\n        enableSort = false;\r\n\r\n        constructor(zIndex: number, sorting: boolean | Function) {\r\n            super();\r\n            /**\r\n             * Children that were rendered in last run\r\n             * @type {Array}\r\n             */\r\n            this.computedChildren = [];\r\n\r\n            /**\r\n             * Temporary variable for manipulations inside displayList\r\n             * @type {null}\r\n             */\r\n            this.currentDisplayList = null;\r\n\r\n            /**\r\n             * real order in the current display list\r\n             * @type {number}\r\n             */\r\n            this.currentIndex = 0;\r\n\r\n            /**\r\n             * Groups with lesser zIndex will be rendered first. Inside one group objects with largest zOrder will be rendered first.\r\n             * @type {number}\r\n             */\r\n            this.zIndex = zIndex || 0;\r\n\r\n            /**\r\n             * sort elements inside or not\r\n             * @type {boolean}\r\n             */\r\n            this.enableSort = !!sorting;\r\n\r\n            if (typeof sorting === 'function') {\r\n                this.on('add', sorting);\r\n            }\r\n        }\r\n\r\n        /**\r\n         *\r\n         * @param a\r\n         * @param b\r\n         * @returns {number}\r\n         */\r\n        static compareZOrder(a: DisplayObject, b: DisplayObject) {\r\n            if (a.zOrder < b.zOrder) {\r\n                return 1;\r\n            }\r\n            if (a.zOrder > b.zOrder) {\r\n                return -1;\r\n            }\r\n            return a.updateOrder - b.updateOrder;\r\n        };\r\n\r\n        /**\r\n         * clears temporary variables\r\n         */\r\n        clear() {\r\n            var list = this.computedChildren;\r\n            for (var i = 0; i < list.length; i++) {\r\n                var children = (list[i] as Container).displayChildren;\r\n                if (children && children.length > 0) {\r\n                    for (var j = 0; j < children.length; j++) {\r\n                        children[j].displayParent = null;\r\n                    }\r\n                    children.length = 0;\r\n                }\r\n                list[i].displayParent = null;\r\n            }\r\n            list.length = 0;\r\n            this.currentDisplayList = null;\r\n            this.currentIndex = 0;\r\n        };\r\n\r\n        /**\r\n         * used only by displayList before sorting takes place\r\n         * @param container {PIXI.DisplayObject}\r\n         */\r\n        add(displayObject: DisplayObject) {\r\n            displayObject.displayOrder = this.computedChildren.length;\r\n            this.emit('add', displayObject);\r\n            this.computedChildren.push(displayObject);\r\n        };\r\n\r\n        /**\r\n         * Called after all childrens are computed\r\n         */\r\n        update() {\r\n            this.emit('update');\r\n            if (this.enableSort && this.computedChildren.length > 1) {\r\n                this.computedChildren.sort(DisplayGroup.compareZOrder);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * renders everything inside\r\n         * @param parentContainer\r\n         * @param renderer\r\n         */\r\n        renderWebGL(parentContainer: Container, renderer: WebGLRenderer) {\r\n            var list = this.computedChildren;\r\n            for (var j = 0; j < list.length; j++) {\r\n                var container = list[j] as Container;\r\n                if (container.displayFlag) {\r\n                    container.renderWebGL(renderer);\r\n                } else {\r\n                    container.displayOrder = renderer.incDisplayOrder();\r\n                    (container as any)._renderWebGL(renderer);\r\n                    var children = container.displayChildren;\r\n                    if (children && children.length) {\r\n                        for (var k = 0; k < children.length; k++) {\r\n                            var child = children[k];\r\n                            child.displayOrder = renderer.incDisplayOrder();\r\n                            if (child.displayFlag) {\r\n                                child.renderWebGL(renderer);\r\n                            } else {\r\n                                (child as any)._renderWebGL(renderer);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * renders everything inside\r\n         * @param parentContainer\r\n         * @param renderer\r\n         */\r\n        renderCanvas(parentContainer: Container, renderer: CanvasRenderer) {\r\n            var list = this.computedChildren;\r\n            for (var j = 0; j < list.length; j++) {\r\n                var container = list[j] as Container;\r\n                if (container.displayFlag) {\r\n                    container.renderCanvas(renderer);\r\n                } else {\r\n                    container.displayOrder = renderer.incDisplayOrder();\r\n                    (container as any)._renderCanvas(renderer);\r\n                    var children = container.displayChildren;\r\n                    if (children && children.length) {\r\n                        for (var k = 0; k < children.length; k++) {\r\n                            var child = children[k];\r\n                            child.displayOrder = renderer.incDisplayOrder();\r\n                            if (child.displayFlag) {\r\n                                child.renderCanvas(renderer);\r\n                            } else {\r\n                                (child as any)._renderCanvas(renderer);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\r\n","module pixi_display {\r\n    import DisplayObject = PIXI.DisplayObject;\r\n    import Container = PIXI.Container;\r\n    import utils = PIXI.utils;\r\n    export class DisplayList extends utils.EventEmitter {\r\n        /**\r\n         * Children that were rendered in last run\r\n         * @type {Array}\r\n         */\r\n        displayGroups: Array<DisplayGroup>;\r\n\r\n        container: Container = null;\r\n\r\n        /**\r\n         * how many elements were rendered by display list last time\r\n         * also it is used to generate updateOrder for them\r\n         * @type {number}\r\n         */\r\n        totalElements = 0;\r\n\r\n        defaultDisplayGroup: DisplayGroup;\r\n\r\n        /**\r\n         * A component for container, sorts all children inside according to their displayGroups\r\n         *\r\n         * @class\r\n         * @extends EventEmitter\r\n         * @memberof PIXI\r\n         */\r\n        constructor() {\r\n            super();\r\n\r\n            this.displayGroups = [];\r\n\r\n            this.defaultDisplayGroup = new DisplayGroup(0, false);\r\n        }\r\n\r\n\r\n        /**\r\n         * clears all display lists that were used in last rendering session\r\n         * please clear it when you stop using this displayList, otherwise you may have problems with GC in some cases\r\n         */\r\n        clear() {\r\n            var list = this.displayGroups;\r\n            for (var i = 0; i < list.length; i++) {\r\n                list[i].clear();\r\n            }\r\n            list.length = 0;\r\n            this.totalElements = 0;\r\n            this.container = null;\r\n        };\r\n\r\n        /**\r\n         * alias for clear()\r\n         * please call it if you stop using this displayList\r\n         */\r\n        destroy() {\r\n            this.clear();\r\n        };\r\n\r\n        static compareZIndex(a: DisplayGroup, b: DisplayGroup) {\r\n            if (a.zIndex !== b.zIndex) {\r\n                return a.zIndex - b.zIndex;\r\n            }\r\n            return a.currentIndex - b.currentIndex;\r\n        };\r\n\r\n        /**\r\n         *\r\n         * @param displayObject {PIXI.DisplayObject} container that we are adding to displaylist\r\n         * @param parent {PIXI.Container} it is not direct parent, but some of ancestors\r\n         * @private\r\n         */\r\n        _addRecursive(displayObject: DisplayObject, parent: Container) {\r\n            var container = displayObject as Container;\r\n            if (!container.visible || !container.renderable) {\r\n                return;\r\n            }\r\n            var groups = this.displayGroups;\r\n            var group = parent.displayGroup;\r\n\r\n            container.updateOrder = this.totalElements++;\r\n            if (container.displayGroup) {\r\n                group = container.displayGroup;\r\n                if (!group.currentDisplayList) {\r\n                    group.currentDisplayList = this;\r\n                    group.currentIndex = groups.length;\r\n                    groups.push(group);\r\n                }\r\n                group.add(container);\r\n\r\n                container.displayParent = container;\r\n            } else {\r\n                container.displayParent = parent;\r\n                if (!parent.displayChildren) {\r\n                    parent.displayChildren = [];\r\n                }\r\n                parent.displayChildren.push(container);\r\n            }\r\n\r\n            if (container.displayFlag !== PIXI.DISPLAY_FLAG.MANUAL_CONTAINER) {\r\n                var children = container.children;\r\n                if (children && children.length > 0) {\r\n                    if ((container as any)._mask || (container as any)._filters && (container as any)._filters.length || container.displayList) {\r\n                        container.displayFlag = PIXI.DISPLAY_FLAG.AUTO_CONTAINER;\r\n                    } else {\r\n                        container.displayFlag = PIXI.DISPLAY_FLAG.AUTO_CHILDREN;\r\n                        for (var i = 0; i < children.length; i++) {\r\n                            this._addRecursive(children[i], container.displayParent);\r\n                        }\r\n                    }\r\n                } else {\r\n                    container.displayFlag = PIXI.DISPLAY_FLAG.AUTO_OBJECT;\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Called from container that owns this display list\r\n         * @param parentContainer\r\n         */\r\n        update(parentContainer: Container) {\r\n            this.clear();\r\n            var tempGroup = parentContainer.displayGroup;\r\n            this.displayGroups.push(this.defaultDisplayGroup);\r\n            this.defaultDisplayGroup.add(parentContainer);\r\n\r\n            this.container = parentContainer;\r\n            var children = parentContainer.children;\r\n            var i = 0;\r\n            for (i = 0; i < children.length; i++) {\r\n                this._addRecursive(children[i], parentContainer);\r\n            }\r\n            var groups = this.displayGroups;\r\n            groups.sort(DisplayList.compareZIndex);\r\n            for (i = 0; i < groups.length; i++) {\r\n                groups[i].currentIndex = i;\r\n                groups[i].update();\r\n            }\r\n            this.emit('afterUpdate');\r\n        };\r\n\r\n        /**\r\n         * renders container with webgl context\r\n         * @param parentContainer\r\n         * @param renderer\r\n         */\r\n        renderWebGL(parentContainer: Container, renderer: WebGLRenderer) {\r\n            //prevent recursion ;)\r\n            parentContainer.displayFlag = PIXI.DISPLAY_FLAG.AUTO_CHILDREN;\r\n            //lets do it!\r\n            var groups = this.displayGroups;\r\n            for (var i = 0; i < groups.length; i++) {\r\n                var group = groups[i];\r\n                group.renderWebGL(parentContainer, renderer);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * renders container with canvas2d context\r\n         * @param parentContainer\r\n         * @param renderer\r\n         */\r\n        renderCanvas(parentContainer: Container, renderer: CanvasRenderer) {\r\n            var groups = this.displayGroups;\r\n            for (var i = 0; i < groups.length; i++) {\r\n                var group = groups[i];\r\n                group.renderCanvas(parentContainer, renderer);\r\n            }\r\n        };\r\n\r\n    }\r\n}\r\n","declare module PIXI {\r\n    export interface DisplayObject {\r\n        /**\r\n         * please specify it to handle zOrder and zIndex\r\n         * @type {PIXI.DisplayGroup}\r\n         */\r\n        displayGroup: pixi_display.DisplayGroup,\r\n\r\n        /**\r\n         * calculated inside displayList. Can be set to manual mode\r\n         * @type {number}\r\n         */\r\n        displayFlag: number,\r\n\r\n        /**\r\n         * calculated inside displayList. Cleared on displayList.clear()\r\n         * Equal to 'this' if displayGroup is specified\r\n         * @type {PIXI.Container}\r\n         */\r\n        displayParent: PIXI.Container,\r\n\r\n        /**\r\n         * zOrder is distance between screen and object. Objects with largest zOrder will appear first in their DisplayGroup\r\n         * @type {number}\r\n         */\r\n        zOrder: number,\r\n\r\n        /**\r\n         * updateOrder is calculated by DisplayList, it is required for sorting inside DisplayGroup\r\n         * @type {number}\r\n         */\r\n        updateOrder: number,\r\n\r\n        /**\r\n         * displayOrder is calculated by render, it is required for interaction\r\n         * @type {number}\r\n         */\r\n        displayOrder: number\r\n    }\r\n}\r\n\r\n(Object as any).assign(PIXI.DisplayObject.prototype, {\r\n    displayGroup: null,\r\n    displayFlag: PIXI.DISPLAY_FLAG.AUTO_CHILDREN,\r\n    displayParent: null,\r\n    zOrder: 0,\r\n    updateOrder: 0,\r\n    displayOrder: 0\r\n});\r\n","//TODO: add maxDisplayOrder for displayObjects and use it to speed up the interaction here\r\n\r\n/**\r\n * @mixin\r\n */\r\n\r\nmodule pixi_display {\r\n    import InteractionManager = PIXI.interaction.InteractionManager;\r\n    import DisplayObject = PIXI.DisplayObject;\r\n    import Point = PIXI.Point;\r\n    import Graphics = PIXI.Graphics;\r\n    import Container = PIXI.Container;\r\n    import InteractionEvent = PIXI.interaction.InteractionEvent;\r\n    (Object as any).assign(InteractionManager.prototype, {\r\n        _queue: [[] as Array<DisplayObject>, [] as Array<DisplayObject>],\r\n        /**\r\n         * This is private recursive copy of processInteractive\r\n         */\r\n        _displayProcessInteractive: function (point: Point, displayObject: DisplayObject, hitTestOrder: number, interactive: boolean): number {\r\n            if (!displayObject || !displayObject.visible) {\r\n                return 0;\r\n            }\r\n\r\n            // Took a little while to rework this function correctly! But now it is done and nice and optimised. ^_^\r\n            //\r\n            // This function will now loop through all objects and then only hit test the objects it HAS to, not all of them. MUCH faster..\r\n            // An object will be hit test if the following is true:\r\n            //\r\n            // 1: It is interactive.\r\n            // 2: It belongs to a parent that is interactive AND one of the parents children have not already been hit.\r\n            //\r\n            // As another little optimisation once an interactive object has been hit we can carry on through the scenegraph, but we know that there will be no more hits! So we can avoid extra hit tests\r\n            // A final optimisation is that an object is not hit test directly if a child has already been hit.\r\n\r\n            var hit = 0,\r\n                interactiveParent = interactive = displayObject.interactive || interactive;\r\n\r\n            // if the displayobject has a hitArea, then it does not need to hitTest children.\r\n            if (displayObject.hitArea) {\r\n                interactiveParent = false;\r\n            }\r\n\r\n            // it has a mask! Then lets hit test that before continuing..\r\n            const mask: Graphics = (displayObject as any)._mask;\r\n            if (hitTestOrder < Infinity && mask) {\r\n                if (!mask.containsPoint(point)) {\r\n                    hitTestOrder = Infinity;\r\n                }\r\n            }\r\n\r\n            // it has a filterArea! Same as mask but easier, its a rectangle\r\n            if (hitTestOrder < Infinity && displayObject.filterArea) {\r\n                if (!displayObject.filterArea.contains(point.x, point.y)) {\r\n                    hitTestOrder = Infinity;\r\n                }\r\n            }\r\n\r\n            // ** FREE TIP **! If an object is not interactive or has no buttons in it\r\n            // (such as a game scene!) set interactiveChildren to false for that displayObject.\r\n            // This will allow pixi to completely ignore and bypass checking the displayObjects children.\r\n            const children: Array<DisplayObject> = (displayObject as Container).children;\r\n            if (displayObject.interactiveChildren && children) {\r\n                for (var i = children.length - 1; i >= 0; i--) {\r\n                    const child = children[i];\r\n\r\n                    // time to get recursive.. if this function will return if something is hit..\r\n                    const hitChild = this._displayProcessInteractive(point, child, hitTestOrder, interactiveParent);\r\n                    if (hitChild) {\r\n                        // its a good idea to check if a child has lost its parent.\r\n                        // this means it has been removed whilst looping so its best\r\n                        if (!child.parent) {\r\n                            continue;\r\n                        }\r\n\r\n                        hit = hitChild;\r\n                        hitTestOrder = hitChild;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // no point running this if the item is not interactive or does not have an interactive parent.\r\n            if (interactive) {\r\n                // if we are hit testing (as in we have no hit any objects yet)\r\n                // We also don't need to worry about hit testing if once of the displayObjects children has already been hit!\r\n                if (hitTestOrder < displayObject.displayOrder) {\r\n                    //pixi v4\r\n                    if (displayObject.hitArea) {\r\n                        displayObject.worldTransform.applyInverse(point, this._tempPoint);\r\n                        if (displayObject.hitArea.contains(this._tempPoint.x, this._tempPoint.y)) {\r\n                            hit = displayObject.displayOrder;\r\n                        }\r\n                    }\r\n                    else if ((displayObject as any).containsPoint) {\r\n                        if ((displayObject as any).containsPoint(point)) {\r\n                            hit = displayObject.displayOrder;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (displayObject.interactive) {\r\n                    this._queueAdd(displayObject, hit);\r\n                }\r\n            }\r\n\r\n            return hit;\r\n\r\n        },\r\n\r\n        processInteractive: function (strangeStuff: InteractionEvent | Point, displayObject: DisplayObject, func: Function, hitTest: boolean, interactive: boolean) {\r\n            //older versions\r\n            var interactionEvent: InteractionEvent = null;\r\n            var point: Point = null;\r\n            if ((strangeStuff as InteractionEvent).data &&\r\n                (strangeStuff as InteractionEvent).data.global) {\r\n                interactionEvent = strangeStuff as InteractionEvent;\r\n                point = interactionEvent.data.global;\r\n            } else {\r\n                point = strangeStuff as Point;\r\n            }\r\n            this._startInteractionProcess();\r\n            this._displayProcessInteractive(point, displayObject, hitTest ? 0 : Infinity, false);\r\n            this._finishInteractionProcess(interactionEvent, func);\r\n        },\r\n\r\n        _startInteractionProcess: function () {\r\n            //move it to constructor\r\n            this._eventDisplayOrder = 1;\r\n            if (!this._queue) {\r\n                //move it to constructor\r\n                this._queue = [[], []];\r\n            }\r\n            this._queue[0].length = 0;\r\n            this._queue[1].length = 0;\r\n        },\r\n\r\n        _queueAdd: function (displayObject: DisplayObject, order: number) {\r\n            var queue = this._queue;\r\n            if (order < this._eventDisplayOrder) {\r\n                queue[0].push(displayObject);\r\n            } else {\r\n                if (order > this._eventDisplayOrder) {\r\n                    this._eventDisplayOrder = order;\r\n                    var q = queue[1];\r\n                    for (var i = 0; i < q.length; i++) {\r\n                        queue[0].push(q[i]);\r\n                    }\r\n                    queue[1].length = 0;\r\n                }\r\n                queue[1].push(displayObject);\r\n            }\r\n        },\r\n        _finishInteractionProcess: function (event: InteractionEvent, func: Function) {\r\n            var queue = this._queue;\r\n            var q = queue[0];\r\n            var i = 0;\r\n            for (; i < q.length; i++) {\r\n                if (event) {\r\n                    //v4.3\r\n                    func(event, q[i], false);\r\n                } else {\r\n                    //old\r\n                    func(q[i], false);\r\n                }\r\n            }\r\n            q = queue[1];\r\n            for (i = 0; i < q.length; i++) {\r\n                if (event) {\r\n                    //v4.3\r\n                    if (!event.target) {\r\n                        event.target = q[i];\r\n                    }\r\n                    func(event, q[i], true);\r\n                } else {\r\n                    //old\r\n                    func(q[i], true);\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n","/// <reference types=\"pixi.js\" />\r\n\r\ndeclare module PIXI {\r\n    interface WebGLRenderer {\r\n        _lastDisplayOrder: number\r\n        incDisplayOrder(): number\r\n    }\r\n    interface CanvasRenderer {\r\n        _lastDisplayOrder: number\r\n        incDisplayOrder(): number\r\n    }\r\n}\r\n\r\n(Object as any).assign(WebGLRenderer.prototype, {\r\n    _lastDisplayOrder: 0,\r\n\r\n    incDisplayOrder() {\r\n        return ++this._lastDisplayOrder;\r\n    },\r\n\r\n    _oldRender: WebGLRenderer.prototype.render,\r\n\r\n    render(displayObject: PIXI.DisplayObject, renderTexture?: PIXI.RenderTexture, clear?: boolean, transform?: PIXI.Transform, skipUpdateTransform?: boolean) {\r\n        if (!renderTexture) {\r\n            this._lastDisplayOrder = 0;\r\n        }\r\n        this._oldRender(displayObject, renderTexture, clear, transform, skipUpdateTransform);\r\n    }\r\n});\r\n\r\n(Object as any).assign(CanvasRenderer.prototype, {\r\n    _lastDisplayOrder: 0,\r\n\r\n    incDisplayOrder() {\r\n        return ++this._lastDisplayOrder;\r\n    },\r\n\r\n    _oldRender: CanvasRenderer.prototype.render,\r\n\r\n    render(displayObject: PIXI.DisplayObject, renderTexture?: PIXI.RenderTexture, clear?: boolean, transform?: PIXI.Transform, skipUpdateTransform?: boolean) {\r\n        if (!renderTexture) {\r\n            this._lastDisplayOrder = 0;\r\n        }\r\n        this._oldRender(displayObject, renderTexture, clear, transform, skipUpdateTransform);\r\n    }\r\n});\r\n","declare module PIXI {\r\n    var display: typeof pixi_display;\r\n    var DisplayGroup: typeof pixi_display.DisplayGroup;\r\n    var DisplayList: typeof pixi_display.DisplayList;\r\n}\r\n\r\n(Object as any).assign(PIXI, {\r\n    display: pixi_display,\r\n    DisplayGroup: pixi_display.DisplayGroup,\r\n    DisplayList: pixi_display.DisplayList\r\n});\r\n"]}